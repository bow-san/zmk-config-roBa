#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        nihongo {
            bindings = <&kp LA(SQT)>;
            key-positions = <39 37>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                           &kp T                                                       &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                           &kp G        &lt 5 RS(TAB)                   &kp ESCAPE     &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                           &kp B        &lt 6 TAB                       &kp DELETE     &kp N        &kp M  &kp COMMA  &kp DOT  &kp AT_SIGN
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 4 RS(RC(COLON))  &lt 1 SPACE  &lt_to_layer_0 3 RS(RC(J))      &kp BACKSPACE  &lt 2 ENTER                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNC_NUM {
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5                                 &kp F6        &kp F7     &kp F8     &kp F9   &kp F10
&kt NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5     &trans      &trans          &kp NUMBER_6  &kp N7     &kp N8     &kp N9   &kp N0
&kp LEFT_SHIFT  &kt PLUS      &kt MINUS     &kt ASTERISK  &kt SLASH  &trans      &trans          &kt EQUAL     &kt TILDE  &kt CARET  &kp F11  &kp F12
&trans          &trans        &trans        &trans        &trans     &trans      &kp LEFT_SHIFT  &trans                                       &kp RIGHT_SHIFT
            >;
        };

        NUM {
            bindings = <
&kt EXCLAMATION     &kt DOUBLE_QUOTES  &kt HASH      &kt DOLLAR      &kt PERCENT                        &kt AMPERSAND  &kt SQT           &kt LEFT_PARENTHESIS  &kt RIGHT_PARENTHESIS  &kt PIPE
&trans              &trans             &trans        &kt UNDERSCORE  &kt BACKSLASH  &trans      &trans  &kt LESS_THAN  &kt GREATER_THAN  &kt LEFT_BRACKET      &kt RIGHT_BRACKET      &kt COLON
&kt LC(LEFT_SHIFT)  &trans             &trans        &trans          &trans         &trans      &trans  &kt QUESTION   &kt SLASH         &kt LEFT_BRACE        &kt RIGHT_BRACE        &kt SEMICOLON
&kp LCTRL           &trans             &kp LEFT_ALT  &trans          &trans         &trans      &trans  &trans                                                                        &kt GRAVE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                              &kt PRINTSCREEN  &kt SCROLLLOCK  &kt PAUSE_BREAK  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &kp PAGE_UP        &trans  &kt SYSREQ       &kt INS         &trans           &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &kp PAGE_DOWN      &trans  &trans           &trans          &trans           &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans             &trans  &trans                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans          &trans  &trans  &trans  &trans                         &trans      &trans    &trans    &trans    &trans
&trans          &trans  &trans  &trans  &trans  &trans      &trans     &mkp MB4    &mkp MB1  &mkp MB3  &mkp MB2  &trans
&kt LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans      &trans     &mkp MB5    &trans    &trans    &trans    &trans
&kt LCTRL       &trans  &trans  &trans  &trans  &trans      &kp LCTRL  &kp LSHIFT                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                       &trans          &trans          &trans          &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kt LANG_ZENKAKUHANKAKU  &kt LANGUAGE_3  &kt LANGUAGE_4  &kt LANGUAGE_5  &kt LANGUAGE_6  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans                   &trans          &trans          &trans          &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans                   &trans                                                          &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
